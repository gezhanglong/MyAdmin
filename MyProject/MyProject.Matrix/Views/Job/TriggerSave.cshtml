@{
    ViewBag.Title = ""; 
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model MyProject.Matrix.Controllers.Job.ViewModels.TriggersModel
<script type="text/javascript">
    $(function () {
        $("body").css({ "background-color": "#F9F9F9", "margin-top": "0px" });
        if ($("#JOB_NAME").val() != "") {
            $("#JOB_NAME").attr("disabled", "disabled");
        }
        if ($("#TRIGGER_NAME").val() != "") {
            $("#TRIGGER_NAME").attr("disabled", "disabled");
        }
        if ($("#TRIGGER_GROUP").val() != "") {
            $("#TRIGGER_GROUP").attr("disabled", "disabled");
        }
        if ($("#TRIGGER_TYPE").val() == "SIMPLE") {
            $("#cronId").css("display", "none");
            $("#countId").css("display", "table-row");
            $("#intervalId").css("display", "table-row");
        } else {
            $("#cronId").css("display", "table-row");
            $("#countId").css("display", "none");
            $("#intervalId").css("display", "none");
        }
        $("#TRIGGER_TYPE").change(function () {//选择
            if ($("#TRIGGER_TYPE").val() == "SIMPLE") {
                $("#cronId").css("display", "none");
                $("#countId").css("display", "table-row");
                $("#intervalId").css("display", "table-row");
            } else {
                $("#cronId").css("display", "table-row");
                $("#countId").css("display", "none");
                $("#intervalId").css("display", "none");
            }
        });
        
    });
    function formDate(form) {
        $("#JOB_NAME").removeAttr("disabled");
        $("#TRIGGER_NAME").removeAttr("disabled");
        $("#TRIGGER_GROUP").removeAttr("disabled");
    }
</script>
<div class="widget-box" style="margin-top: 0; display: block;" id="div_opt_1">
    <div class="widget-title">
        <h5>用户信息</h5>
    </div>
    <div class="widget-content nopadding">
        @using (Html.BeginForm("TriggerSave", "Job", FormMethod.Post, new { @class = "formular", id = "form1" }))
        { 
            <table class="table table-bordered table-striped">
                <tbody>
                    <tr class="even gradeA">
                        <td>@Html.LabelFor(c => c.TRIGGER_NAME)</td>
                        <td>
                            @Html.TextBoxFor(c => c.TRIGGER_NAME, new { @class = "span11", @style = "width:50%;height: 30px;"})
                            
                        </td>
                    </tr>
                    <tr class="even gradeC">
                        <td style="width: 150px;">@Html.LabelFor(c => c.TRIGGER_GROUP)</td>
                        <td>
                             @Html.DropDownListFor(c => c.TRIGGER_GROUP, ViewData["triggersGroupList"] as List<SelectListItem>, new { @style = "width:50%;height: 30px;" })  
                             
                        </td>
                    </tr> 
                    <tr class="even gradeA">
                        <td>@Html.LabelFor(c => c.JOB_NAME)</td>
                        <td>
                             @Html.DropDownListFor(c => c.JOB_NAME, ViewData["jobList"] as List<SelectListItem>, new { @style = "width:50%;height: 30px;" }) 
                            
                        </td>
                    </tr> 
                    <tr class="even gradeA">
                        <td>@Html.LabelFor(c => c.DESCRIPTION)</td>
                        <td>
                            @Html.TextBoxFor(c => c.DESCRIPTION, new { @class = "span11", @style = "width:50%;height: 30px;" })
                            
                        </td>
                    </tr> 
                    <tr class="even gradeA">
                        <td>@Html.LabelFor(c => c.PRIORITY)</td>
                        <td>
                            @Html.TextBoxFor(c => c.PRIORITY, new { @class = "span11", @style = "width:50%;height: 30px;"})
                           
                        </td>
                    </tr>
                    <tr class="even gradeA">
                        <td>@Html.LabelFor(c => c.TRIGGER_STATE)</td>
                        <td>
                            @Html.DropDownListFor(c => c.TRIGGER_STATE, ViewData["triggerStateList"] as List<SelectListItem>, new { @style = "width:50%;height: 30px;" }) 
                            
                        </td>
                    </tr>
                    <tr class="even gradeA">
                        <td>@Html.LabelFor(c => c.TRIGGER_TYPE)</td>
                        <td>
                             @Html.DropDownListFor(c => c.TRIGGER_TYPE, ViewData["triggerTypeList"] as List<SelectListItem>, new { @style = "width:50%;height: 30px;" }) 
                             
                        </td>
                    </tr>
                    <tr  style="display:none;" id="cronId" class="even gradeA">
                        <td>@Html.LabelFor(c => c.CRON_EXPRESSION)</td>
                        <td>
                            @Html.TextBoxFor(c => c.CRON_EXPRESSION, new { @class = "span11", @style = "width:50%;height: 30px;"})
                            
                        </td>
                    </tr>
                    <tr  style="display:none;" id="countId" class="even gradeA">
                        <td>@Html.LabelFor(c => c.REPEAT_COUNT)</td>
                        <td>
                            @Html.TextBoxFor(c => c.REPEAT_COUNT, new { @class = "span11", @style = "width:50%;height: 30px;"})
                            <span style="color:yellowgreen;"> -1为无限循环</span>
                        </td>
                    </tr>
                    <tr  style="display:none;" id="intervalId" class="even gradeA">
                        <td>@Html.LabelFor(c => c.REPEAT_INTERVAL)</td>
                        <td>
                            @Html.TextBoxFor(c => c.REPEAT_INTERVAL, new { @class = "span11", @style = "width:50%;height: 30px;"})
                           <span style="color:yellowgreen;">单位：分钟</span>
                        </td>
                    </tr>
                    <tr class="even gradeA">
                        <td>@Html.LabelFor(c => c.START_TIME)</td>
                        <td>
                             @Html.TextBoxFor(c => c.START_TIME, new { @class="Wdate", @onfocus="WdatePicker({dateFmt:'yyyy-MM-dd HH:mm:ss'})" , @style="width: 130px;height: 23px;"})  
                            
                        </td>
                    </tr>
                    <tr class="even gradeA">
                        <td>@Html.LabelFor(c => c.END_TIME)</td>
                        <td>
                              @Html.TextBoxFor(c => c.END_TIME, new { @class="Wdate", @onfocus="WdatePicker({dateFmt:'yyyy-MM-dd HH:mm:ss'})" , @style="width: 130px;height: 23px;"})   
                            
                        </td>
                    </tr>
                    <tr class="odd gradeA">
                        <td></td>
                        <td>
                            <button type="submit" class="btn btn-success btn-mini" onclick="return formDate(this.form1)">保存</button>
                            <span style="color:red;"> @Html.ValidationSummary()</span>
                        </td>
                    </tr> 
                </tbody>
            </table> 
        }
    </div>
</div>

